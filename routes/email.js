const express = require('express');
const nodemailer = require('nodemailer');
const router = express.Router();

// Create SMTP transporter
const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
        user: process.env.SMTP_USER,
        pass: process.env.SMTP_PASS
    }
});

router.post('/', async (req, res) => {
    try {
        const { recipients, subject, summary } = req.body;

        if (!recipients || !recipients.length || !summary) {
            return res.status(400).json({ error: 'Recipients and summary are required' });
        }

        const emailSubject = subject || 'Meeting Summary';

        const htmlContent = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #333; border-bottom: 2px solid #007bff; padding-bottom: 10px;">
          ${emailSubject}
        </h2>
        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <pre style="white-space: pre-wrap; font-family: inherit; margin: 0;">${summary}</pre>
        </div>
        <p style="color: #666; font-size: 12px; margin-top: 30px;">
          This summary was generated by AI Meeting Summarizer
        </p>
      </div>
    `;

        const mailOptions = {
            from: process.env.GMAIL_USER,
            to: recipients.join(', '),
            subject: emailSubject,
            html: htmlContent
        };

        const info = await transporter.sendMail(mailOptions);

        res.json({
            message: 'Email sent successfully',
            messageId: info.messageId
        });

    } catch (error) {
        console.error('Error sending email:', error);
        res.status(500).json({ error: 'Failed to send email: ' + error.message });
    }
});

module.exports = router;